name: $(Date:yyyMMdd)$(Rev:.r)
stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      name: Hosted Windows 2019 with VS2019
    variables:
      BuildConfiguration: Debug
      BuildPlatform: any cpu

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True
    
    - task: VSBuild@1
      displayName: 'Build solution Database/Database.sln'
      inputs:
        solution: Database/Database.sln
    
    - task: CopyFiles@2
      displayName: 'Copy dacpac, IaC, ahd data Files to Staging'
      inputs:
        Contents: |
         Database/bin/**/*.dacpac
         IaC/**
         data/**
        TargetFolder: '$(Build.StagingDirectory)'
    
    - task: CopyFiles@2
      displayName: 'Copy dacpac to Staging'
      inputs:
        SourceFolder: Database/bin
        Contents: |
         **\**.dacpac
         
        TargetFolder: '$(Build.StagingDirectory)'
      enabled: false
    
    - task: CopyFiles@2
      displayName: 'Copy IaC files to Staging'
      inputs:
        SourceFolder: infra
        TargetFolder: '$(Build.StagingDirectory)'
      enabled: false
    
    - task: CopyFiles@2
      displayName: 'Copy Data Files to Staging'
      inputs:
        SourceFolder: data
        TargetFolder: '$(Build.StagingDirectory)'
      enabled: false
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()

- stage: DeployToDev
  jobs:
  - deployment: DeployInfraWebDB
    displayName: Deploy Infra Web and DB
    pool:
      name: Hosted Windows 2019 with VS2019
      variables:
        adminlogin: abel
        azureSubscriptionName: ca-abewan-demo-Test
        dbCapacity: 1
        dbComputeModel: Serverless
        dbEdition: GeneralPurpose
        dbFamily: Gen4
        dbName: learndb
        dbZoneRedundant: false
        endip: 0.0.0.0
        location: southcentralus
        resourceGroupHName: abellearndbrg2
        servername: abellearndbserver1
        servicePrincipal: http://AbelDeployPrincipal
        servicePrincipalTenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
        startip: 0.0.0.0
        storageContainerName: uploaddata
        webAppName: abellearndbwebapp
        webAppSku: B1
        webStorageAccountName: abellearndbstorage
        webStorageAccountRegion: southcentralus
        webStorageAccountSku: Standard_LRS
    environment: 'courses-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: '**/*'

          - task: PowerShell@2
            displayName : 'Provision DB and Web'
            inputs:
              filePath: '$(Pipeline.Workspace)/_LearnDB-ASP.NETCore-CI/drop/IaC/provisionWebDB.ps1'
              arguments: '-servicePrincipal $(servicePrincipal) -servicePrincipalSecret $(servicePrincipalSecret) -servicePrincipalTenantId $(servicePrincipalTenantId) -azureSubscriptionName $(azureSubscriptionName) -resourceGroupName $(resourceGroupName) -location $(location) -adminlogin $(adminlogin) -adminPassword $(adminPassword) -servername $(servername) -startip $(startip) -endip $(endip) -dbName $(dbName) -dbEdition $(dbEdition) -dbFamily $(dbFamily) -dbCapacity $(dbCapacity) -dbZoneRedundant $(dbZoneRedundant) -webAppName $(webAppName) -webAppSku $(webAppSku) -releaseDirectory $(Agent.ReleaseDirectory) -webStorageAccountName $(webStorageAccountName) -webStorageAccountRegion $(webStorageAccountRegion) -webStorageAccountSku $(webStorageAccountSku) -storageContainerName $(storageContainerName) -dbComputeModel $(dbComputeModel)'
          
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ca-abewan-demo-test (e97f6c4e-c830-479b-81ad-1aff1dd07470)'
              appType: 'webApp'
              WebAppName: '$(webAppName)'
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'